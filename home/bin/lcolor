#!/bin/bash

print_usage() {
    cat <<_END_
Highlights lines of the input based on different occurrances of a pattern.

Usage: $0 -h
       $0 [options] [file1 file2 ...]

Options:
    -h        This help message.
    -i        Case insensitive pattern.
    -p regex  The pattern to search for.
    -r        Interpret the pattern as extended regular expression.
_END_
}

# -------- Main body --------

colors=(Red Green Yellow Blue Purple Cyan White IRed IGreen IYellow IBlue IPurple ICyan IWhite)

flags=
sedargs=()
pattern=
parprefix='\'
while getopts ":hip:r" Option; do
    case $Option in
    h)
	print_usage
	exit
	;;
    i)
	flags+=I
	;;
    p)
        pattern="$OPTARG"
        ;;
    r)
        sedargs+=(-r)
	parprefix=
    ;;
    esac
done

shift $(($OPTIND - 1))

if [ -z "$pattern" ]; then
    echo "Pattern is not given."
    exit 1
fi

openpar="$parprefix("
closepar="$parprefix)"
match="^.*${openpar}${pattern}${closepar}.*$"

i=0
args=()
while read -r line; do
    color_index=$((i % ${#colors[@]}))
    ((++i))
    color="${colors[color_index]}"
    args+=("$color" "$line")
done < <(cat "$@" | sed "${sedargs[@]}" -n "s/${match}/\\1/${flags}p" | sort | uniq | sed 's/[][*.\]/\\&/g')

cat "$@" | hl -l "${args[@]}"

